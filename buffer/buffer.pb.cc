// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buffer.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "buffer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace buffer {

namespace {

const ::google::protobuf::Descriptor* board_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  board_reflection_ = NULL;
const ::google::protobuf::Descriptor* rank_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  rank_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_buffer_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_buffer_2eproto() {
  protobuf_AddDesc_buffer_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "buffer.proto");
  GOOGLE_CHECK(file != NULL);
  board_descriptor_ = file->message_type(0);
  static const int board_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(board, current_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(board, our_group_lib1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(board, our_group_lib2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(board, our_group_lib3_plus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(board, oppo_group_lib1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(board, oppo_group_lib2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(board, oppo_group_lib3_plus_),
  };
  board_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      board_descriptor_,
      board::internal_default_instance(),
      board_offsets_,
      -1,
      -1,
      -1,
      sizeof(board),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(board, _internal_metadata_));
  rank_descriptor_ = file->message_type(1);
  static const int rank_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rank, x_cor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rank, y_cor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rank, value_),
  };
  rank_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      rank_descriptor_,
      rank::internal_default_instance(),
      rank_offsets_,
      -1,
      -1,
      -1,
      sizeof(rank),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(rank, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_buffer_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      board_descriptor_, board::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      rank_descriptor_, rank::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_buffer_2eproto() {
  board_default_instance_.Shutdown();
  delete board_reflection_;
  rank_default_instance_.Shutdown();
  delete rank_reflection_;
}

void protobuf_InitDefaults_buffer_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  board_default_instance_.DefaultConstruct();
  rank_default_instance_.DefaultConstruct();
  board_default_instance_.get_mutable()->InitAsDefaultInstance();
  rank_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_buffer_2eproto_once_);
void protobuf_InitDefaults_buffer_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_buffer_2eproto_once_,
                 &protobuf_InitDefaults_buffer_2eproto_impl);
}
void protobuf_AddDesc_buffer_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_buffer_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014buffer.proto\022\006buffer\"\273\001\n\005board\022\025\n\rcurr"
    "ent_state\030\001 \003(\010\022\026\n\016our_group_lib1\030\002 \003(\010\022"
    "\026\n\016our_group_lib2\030\003 \003(\010\022\033\n\023our_group_lib"
    "3_plus\030\004 \003(\010\022\027\n\017oppo_group_lib1\030\005 \003(\010\022\027\n"
    "\017oppo_group_lib2\030\006 \003(\010\022\034\n\024oppo_group_lib"
    "3_plus\030\007 \003(\010\"3\n\004rank\022\r\n\005x_cor\030\001 \003(\005\022\r\n\005y"
    "_cor\030\002 \003(\005\022\r\n\005value\030\003 \003(\002b\006proto3", 273);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "buffer.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_buffer_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_buffer_2eproto_once_);
void protobuf_AddDesc_buffer_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_buffer_2eproto_once_,
                 &protobuf_AddDesc_buffer_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_buffer_2eproto {
  StaticDescriptorInitializer_buffer_2eproto() {
    protobuf_AddDesc_buffer_2eproto();
  }
} static_descriptor_initializer_buffer_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int board::kCurrentStateFieldNumber;
const int board::kOurGroupLib1FieldNumber;
const int board::kOurGroupLib2FieldNumber;
const int board::kOurGroupLib3PlusFieldNumber;
const int board::kOppoGroupLib1FieldNumber;
const int board::kOppoGroupLib2FieldNumber;
const int board::kOppoGroupLib3PlusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

board::board()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_buffer_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffer.board)
}

void board::InitAsDefaultInstance() {
}

board::board(const board& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:buffer.board)
}

void board::SharedCtor() {
  _cached_size_ = 0;
}

board::~board() {
  // @@protoc_insertion_point(destructor:buffer.board)
  SharedDtor();
}

void board::SharedDtor() {
}

void board::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* board::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return board_descriptor_;
}

const board& board::default_instance() {
  protobuf_InitDefaults_buffer_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<board> board_default_instance_;

board* board::New(::google::protobuf::Arena* arena) const {
  board* n = new board;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void board::Clear() {
// @@protoc_insertion_point(message_clear_start:buffer.board)
  current_state_.Clear();
  our_group_lib1_.Clear();
  our_group_lib2_.Clear();
  our_group_lib3_plus_.Clear();
  oppo_group_lib1_.Clear();
  oppo_group_lib2_.Clear();
  oppo_group_lib3_plus_.Clear();
}

bool board::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffer.board)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bool current_state = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_current_state())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 10, input, this->mutable_current_state())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_our_group_lib1;
        break;
      }

      // repeated bool our_group_lib1 = 2;
      case 2: {
        if (tag == 18) {
         parse_our_group_lib1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_group_lib1())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 18, input, this->mutable_our_group_lib1())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_our_group_lib2;
        break;
      }

      // repeated bool our_group_lib2 = 3;
      case 3: {
        if (tag == 26) {
         parse_our_group_lib2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_group_lib2())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 26, input, this->mutable_our_group_lib2())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_our_group_lib3_plus;
        break;
      }

      // repeated bool our_group_lib3_plus = 4;
      case 4: {
        if (tag == 34) {
         parse_our_group_lib3_plus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_our_group_lib3_plus())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 34, input, this->mutable_our_group_lib3_plus())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_oppo_group_lib1;
        break;
      }

      // repeated bool oppo_group_lib1 = 5;
      case 5: {
        if (tag == 42) {
         parse_oppo_group_lib1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_group_lib1())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 42, input, this->mutable_oppo_group_lib1())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_oppo_group_lib2;
        break;
      }

      // repeated bool oppo_group_lib2 = 6;
      case 6: {
        if (tag == 50) {
         parse_oppo_group_lib2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_group_lib2())));
        } else if (tag == 48) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 50, input, this->mutable_oppo_group_lib2())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_oppo_group_lib3_plus;
        break;
      }

      // repeated bool oppo_group_lib3_plus = 7;
      case 7: {
        if (tag == 58) {
         parse_oppo_group_lib3_plus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_oppo_group_lib3_plus())));
        } else if (tag == 56) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 58, input, this->mutable_oppo_group_lib3_plus())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffer.board)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffer.board)
  return false;
#undef DO_
}

void board::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffer.board)
  // repeated bool current_state = 1;
  if (this->current_state_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_current_state_cached_byte_size_);
  }
  for (int i = 0; i < this->current_state_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->current_state(i), output);
  }

  // repeated bool our_group_lib1 = 2;
  if (this->our_group_lib1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_group_lib1_cached_byte_size_);
  }
  for (int i = 0; i < this->our_group_lib1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_group_lib1(i), output);
  }

  // repeated bool our_group_lib2 = 3;
  if (this->our_group_lib2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_group_lib2_cached_byte_size_);
  }
  for (int i = 0; i < this->our_group_lib2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_group_lib2(i), output);
  }

  // repeated bool our_group_lib3_plus = 4;
  if (this->our_group_lib3_plus_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_our_group_lib3_plus_cached_byte_size_);
  }
  for (int i = 0; i < this->our_group_lib3_plus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->our_group_lib3_plus(i), output);
  }

  // repeated bool oppo_group_lib1 = 5;
  if (this->oppo_group_lib1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_group_lib1_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_group_lib1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_group_lib1(i), output);
  }

  // repeated bool oppo_group_lib2 = 6;
  if (this->oppo_group_lib2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_group_lib2_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_group_lib2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_group_lib2(i), output);
  }

  // repeated bool oppo_group_lib3_plus = 7;
  if (this->oppo_group_lib3_plus_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_oppo_group_lib3_plus_cached_byte_size_);
  }
  for (int i = 0; i < this->oppo_group_lib3_plus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->oppo_group_lib3_plus(i), output);
  }

  // @@protoc_insertion_point(serialize_end:buffer.board)
}

::google::protobuf::uint8* board::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffer.board)
  // repeated bool current_state = 1;
  if (this->current_state_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _current_state_cached_byte_size_, target);
  }
  for (int i = 0; i < this->current_state_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->current_state(i), target);
  }

  // repeated bool our_group_lib1 = 2;
  if (this->our_group_lib1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_group_lib1_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_group_lib1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_group_lib1(i), target);
  }

  // repeated bool our_group_lib2 = 3;
  if (this->our_group_lib2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_group_lib2_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_group_lib2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_group_lib2(i), target);
  }

  // repeated bool our_group_lib3_plus = 4;
  if (this->our_group_lib3_plus_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _our_group_lib3_plus_cached_byte_size_, target);
  }
  for (int i = 0; i < this->our_group_lib3_plus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->our_group_lib3_plus(i), target);
  }

  // repeated bool oppo_group_lib1 = 5;
  if (this->oppo_group_lib1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_group_lib1_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_group_lib1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_group_lib1(i), target);
  }

  // repeated bool oppo_group_lib2 = 6;
  if (this->oppo_group_lib2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_group_lib2_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_group_lib2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_group_lib2(i), target);
  }

  // repeated bool oppo_group_lib3_plus = 7;
  if (this->oppo_group_lib3_plus_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _oppo_group_lib3_plus_cached_byte_size_, target);
  }
  for (int i = 0; i < this->oppo_group_lib3_plus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->oppo_group_lib3_plus(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:buffer.board)
  return target;
}

size_t board::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffer.board)
  size_t total_size = 0;

  // repeated bool current_state = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->current_state_size();
    data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _current_state_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_group_lib1 = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->our_group_lib1_size();
    data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_group_lib1_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_group_lib2 = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->our_group_lib2_size();
    data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_group_lib2_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool our_group_lib3_plus = 4;
  {
    size_t data_size = 0;
    unsigned int count = this->our_group_lib3_plus_size();
    data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _our_group_lib3_plus_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_group_lib1 = 5;
  {
    size_t data_size = 0;
    unsigned int count = this->oppo_group_lib1_size();
    data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_group_lib1_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_group_lib2 = 6;
  {
    size_t data_size = 0;
    unsigned int count = this->oppo_group_lib2_size();
    data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_group_lib2_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool oppo_group_lib3_plus = 7;
  {
    size_t data_size = 0;
    unsigned int count = this->oppo_group_lib3_plus_size();
    data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _oppo_group_lib3_plus_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void board::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffer.board)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const board* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const board>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffer.board)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffer.board)
    UnsafeMergeFrom(*source);
  }
}

void board::MergeFrom(const board& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffer.board)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void board::UnsafeMergeFrom(const board& from) {
  GOOGLE_DCHECK(&from != this);
  current_state_.UnsafeMergeFrom(from.current_state_);
  our_group_lib1_.UnsafeMergeFrom(from.our_group_lib1_);
  our_group_lib2_.UnsafeMergeFrom(from.our_group_lib2_);
  our_group_lib3_plus_.UnsafeMergeFrom(from.our_group_lib3_plus_);
  oppo_group_lib1_.UnsafeMergeFrom(from.oppo_group_lib1_);
  oppo_group_lib2_.UnsafeMergeFrom(from.oppo_group_lib2_);
  oppo_group_lib3_plus_.UnsafeMergeFrom(from.oppo_group_lib3_plus_);
}

void board::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffer.board)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void board::CopyFrom(const board& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffer.board)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool board::IsInitialized() const {

  return true;
}

void board::Swap(board* other) {
  if (other == this) return;
  InternalSwap(other);
}
void board::InternalSwap(board* other) {
  current_state_.UnsafeArenaSwap(&other->current_state_);
  our_group_lib1_.UnsafeArenaSwap(&other->our_group_lib1_);
  our_group_lib2_.UnsafeArenaSwap(&other->our_group_lib2_);
  our_group_lib3_plus_.UnsafeArenaSwap(&other->our_group_lib3_plus_);
  oppo_group_lib1_.UnsafeArenaSwap(&other->oppo_group_lib1_);
  oppo_group_lib2_.UnsafeArenaSwap(&other->oppo_group_lib2_);
  oppo_group_lib3_plus_.UnsafeArenaSwap(&other->oppo_group_lib3_plus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata board::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = board_descriptor_;
  metadata.reflection = board_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// board

// repeated bool current_state = 1;
int board::current_state_size() const {
  return current_state_.size();
}
void board::clear_current_state() {
  current_state_.Clear();
}
bool board::current_state(int index) const {
  // @@protoc_insertion_point(field_get:buffer.board.current_state)
  return current_state_.Get(index);
}
void board::set_current_state(int index, bool value) {
  current_state_.Set(index, value);
  // @@protoc_insertion_point(field_set:buffer.board.current_state)
}
void board::add_current_state(bool value) {
  current_state_.Add(value);
  // @@protoc_insertion_point(field_add:buffer.board.current_state)
}
const ::google::protobuf::RepeatedField< bool >&
board::current_state() const {
  // @@protoc_insertion_point(field_list:buffer.board.current_state)
  return current_state_;
}
::google::protobuf::RepeatedField< bool >*
board::mutable_current_state() {
  // @@protoc_insertion_point(field_mutable_list:buffer.board.current_state)
  return &current_state_;
}

// repeated bool our_group_lib1 = 2;
int board::our_group_lib1_size() const {
  return our_group_lib1_.size();
}
void board::clear_our_group_lib1() {
  our_group_lib1_.Clear();
}
bool board::our_group_lib1(int index) const {
  // @@protoc_insertion_point(field_get:buffer.board.our_group_lib1)
  return our_group_lib1_.Get(index);
}
void board::set_our_group_lib1(int index, bool value) {
  our_group_lib1_.Set(index, value);
  // @@protoc_insertion_point(field_set:buffer.board.our_group_lib1)
}
void board::add_our_group_lib1(bool value) {
  our_group_lib1_.Add(value);
  // @@protoc_insertion_point(field_add:buffer.board.our_group_lib1)
}
const ::google::protobuf::RepeatedField< bool >&
board::our_group_lib1() const {
  // @@protoc_insertion_point(field_list:buffer.board.our_group_lib1)
  return our_group_lib1_;
}
::google::protobuf::RepeatedField< bool >*
board::mutable_our_group_lib1() {
  // @@protoc_insertion_point(field_mutable_list:buffer.board.our_group_lib1)
  return &our_group_lib1_;
}

// repeated bool our_group_lib2 = 3;
int board::our_group_lib2_size() const {
  return our_group_lib2_.size();
}
void board::clear_our_group_lib2() {
  our_group_lib2_.Clear();
}
bool board::our_group_lib2(int index) const {
  // @@protoc_insertion_point(field_get:buffer.board.our_group_lib2)
  return our_group_lib2_.Get(index);
}
void board::set_our_group_lib2(int index, bool value) {
  our_group_lib2_.Set(index, value);
  // @@protoc_insertion_point(field_set:buffer.board.our_group_lib2)
}
void board::add_our_group_lib2(bool value) {
  our_group_lib2_.Add(value);
  // @@protoc_insertion_point(field_add:buffer.board.our_group_lib2)
}
const ::google::protobuf::RepeatedField< bool >&
board::our_group_lib2() const {
  // @@protoc_insertion_point(field_list:buffer.board.our_group_lib2)
  return our_group_lib2_;
}
::google::protobuf::RepeatedField< bool >*
board::mutable_our_group_lib2() {
  // @@protoc_insertion_point(field_mutable_list:buffer.board.our_group_lib2)
  return &our_group_lib2_;
}

// repeated bool our_group_lib3_plus = 4;
int board::our_group_lib3_plus_size() const {
  return our_group_lib3_plus_.size();
}
void board::clear_our_group_lib3_plus() {
  our_group_lib3_plus_.Clear();
}
bool board::our_group_lib3_plus(int index) const {
  // @@protoc_insertion_point(field_get:buffer.board.our_group_lib3_plus)
  return our_group_lib3_plus_.Get(index);
}
void board::set_our_group_lib3_plus(int index, bool value) {
  our_group_lib3_plus_.Set(index, value);
  // @@protoc_insertion_point(field_set:buffer.board.our_group_lib3_plus)
}
void board::add_our_group_lib3_plus(bool value) {
  our_group_lib3_plus_.Add(value);
  // @@protoc_insertion_point(field_add:buffer.board.our_group_lib3_plus)
}
const ::google::protobuf::RepeatedField< bool >&
board::our_group_lib3_plus() const {
  // @@protoc_insertion_point(field_list:buffer.board.our_group_lib3_plus)
  return our_group_lib3_plus_;
}
::google::protobuf::RepeatedField< bool >*
board::mutable_our_group_lib3_plus() {
  // @@protoc_insertion_point(field_mutable_list:buffer.board.our_group_lib3_plus)
  return &our_group_lib3_plus_;
}

// repeated bool oppo_group_lib1 = 5;
int board::oppo_group_lib1_size() const {
  return oppo_group_lib1_.size();
}
void board::clear_oppo_group_lib1() {
  oppo_group_lib1_.Clear();
}
bool board::oppo_group_lib1(int index) const {
  // @@protoc_insertion_point(field_get:buffer.board.oppo_group_lib1)
  return oppo_group_lib1_.Get(index);
}
void board::set_oppo_group_lib1(int index, bool value) {
  oppo_group_lib1_.Set(index, value);
  // @@protoc_insertion_point(field_set:buffer.board.oppo_group_lib1)
}
void board::add_oppo_group_lib1(bool value) {
  oppo_group_lib1_.Add(value);
  // @@protoc_insertion_point(field_add:buffer.board.oppo_group_lib1)
}
const ::google::protobuf::RepeatedField< bool >&
board::oppo_group_lib1() const {
  // @@protoc_insertion_point(field_list:buffer.board.oppo_group_lib1)
  return oppo_group_lib1_;
}
::google::protobuf::RepeatedField< bool >*
board::mutable_oppo_group_lib1() {
  // @@protoc_insertion_point(field_mutable_list:buffer.board.oppo_group_lib1)
  return &oppo_group_lib1_;
}

// repeated bool oppo_group_lib2 = 6;
int board::oppo_group_lib2_size() const {
  return oppo_group_lib2_.size();
}
void board::clear_oppo_group_lib2() {
  oppo_group_lib2_.Clear();
}
bool board::oppo_group_lib2(int index) const {
  // @@protoc_insertion_point(field_get:buffer.board.oppo_group_lib2)
  return oppo_group_lib2_.Get(index);
}
void board::set_oppo_group_lib2(int index, bool value) {
  oppo_group_lib2_.Set(index, value);
  // @@protoc_insertion_point(field_set:buffer.board.oppo_group_lib2)
}
void board::add_oppo_group_lib2(bool value) {
  oppo_group_lib2_.Add(value);
  // @@protoc_insertion_point(field_add:buffer.board.oppo_group_lib2)
}
const ::google::protobuf::RepeatedField< bool >&
board::oppo_group_lib2() const {
  // @@protoc_insertion_point(field_list:buffer.board.oppo_group_lib2)
  return oppo_group_lib2_;
}
::google::protobuf::RepeatedField< bool >*
board::mutable_oppo_group_lib2() {
  // @@protoc_insertion_point(field_mutable_list:buffer.board.oppo_group_lib2)
  return &oppo_group_lib2_;
}

// repeated bool oppo_group_lib3_plus = 7;
int board::oppo_group_lib3_plus_size() const {
  return oppo_group_lib3_plus_.size();
}
void board::clear_oppo_group_lib3_plus() {
  oppo_group_lib3_plus_.Clear();
}
bool board::oppo_group_lib3_plus(int index) const {
  // @@protoc_insertion_point(field_get:buffer.board.oppo_group_lib3_plus)
  return oppo_group_lib3_plus_.Get(index);
}
void board::set_oppo_group_lib3_plus(int index, bool value) {
  oppo_group_lib3_plus_.Set(index, value);
  // @@protoc_insertion_point(field_set:buffer.board.oppo_group_lib3_plus)
}
void board::add_oppo_group_lib3_plus(bool value) {
  oppo_group_lib3_plus_.Add(value);
  // @@protoc_insertion_point(field_add:buffer.board.oppo_group_lib3_plus)
}
const ::google::protobuf::RepeatedField< bool >&
board::oppo_group_lib3_plus() const {
  // @@protoc_insertion_point(field_list:buffer.board.oppo_group_lib3_plus)
  return oppo_group_lib3_plus_;
}
::google::protobuf::RepeatedField< bool >*
board::mutable_oppo_group_lib3_plus() {
  // @@protoc_insertion_point(field_mutable_list:buffer.board.oppo_group_lib3_plus)
  return &oppo_group_lib3_plus_;
}

inline const board* board::internal_default_instance() {
  return &board_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rank::kXCorFieldNumber;
const int rank::kYCorFieldNumber;
const int rank::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rank::rank()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_buffer_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffer.rank)
}

void rank::InitAsDefaultInstance() {
}

rank::rank(const rank& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:buffer.rank)
}

void rank::SharedCtor() {
  _cached_size_ = 0;
}

rank::~rank() {
  // @@protoc_insertion_point(destructor:buffer.rank)
  SharedDtor();
}

void rank::SharedDtor() {
}

void rank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* rank::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return rank_descriptor_;
}

const rank& rank::default_instance() {
  protobuf_InitDefaults_buffer_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<rank> rank_default_instance_;

rank* rank::New(::google::protobuf::Arena* arena) const {
  rank* n = new rank;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void rank::Clear() {
// @@protoc_insertion_point(message_clear_start:buffer.rank)
  x_cor_.Clear();
  y_cor_.Clear();
  value_.Clear();
}

bool rank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffer.rank)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 x_cor = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_x_cor())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10, input, this->mutable_x_cor())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_y_cor;
        break;
      }

      // repeated int32 y_cor = 2;
      case 2: {
        if (tag == 18) {
         parse_y_cor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_y_cor())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18, input, this->mutable_y_cor())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // repeated float value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_value())));
        } else if (tag == 29) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26, input, this->mutable_value())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffer.rank)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffer.rank)
  return false;
#undef DO_
}

void rank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffer.rank)
  // repeated int32 x_cor = 1;
  if (this->x_cor_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_x_cor_cached_byte_size_);
  }
  for (int i = 0; i < this->x_cor_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->x_cor(i), output);
  }

  // repeated int32 y_cor = 2;
  if (this->y_cor_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_y_cor_cached_byte_size_);
  }
  for (int i = 0; i < this->y_cor_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->y_cor(i), output);
  }

  // repeated float value = 3;
  if (this->value_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_value_cached_byte_size_);
  }
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->value(i), output);
  }

  // @@protoc_insertion_point(serialize_end:buffer.rank)
}

::google::protobuf::uint8* rank::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffer.rank)
  // repeated int32 x_cor = 1;
  if (this->x_cor_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _x_cor_cached_byte_size_, target);
  }
  for (int i = 0; i < this->x_cor_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->x_cor(i), target);
  }

  // repeated int32 y_cor = 2;
  if (this->y_cor_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _y_cor_cached_byte_size_, target);
  }
  for (int i = 0; i < this->y_cor_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->y_cor(i), target);
  }

  // repeated float value = 3;
  if (this->value_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _value_cached_byte_size_, target);
  }
  for (int i = 0; i < this->value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->value(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:buffer.rank)
  return target;
}

size_t rank::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffer.rank)
  size_t total_size = 0;

  // repeated int32 x_cor = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->x_cor_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->x_cor(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _x_cor_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 y_cor = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->y_cor_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->y_cor(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _y_cor_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float value = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->value_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void rank::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffer.rank)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const rank* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rank>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffer.rank)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffer.rank)
    UnsafeMergeFrom(*source);
  }
}

void rank::MergeFrom(const rank& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffer.rank)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void rank::UnsafeMergeFrom(const rank& from) {
  GOOGLE_DCHECK(&from != this);
  x_cor_.UnsafeMergeFrom(from.x_cor_);
  y_cor_.UnsafeMergeFrom(from.y_cor_);
  value_.UnsafeMergeFrom(from.value_);
}

void rank::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffer.rank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rank::CopyFrom(const rank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffer.rank)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool rank::IsInitialized() const {

  return true;
}

void rank::Swap(rank* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rank::InternalSwap(rank* other) {
  x_cor_.UnsafeArenaSwap(&other->x_cor_);
  y_cor_.UnsafeArenaSwap(&other->y_cor_);
  value_.UnsafeArenaSwap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata rank::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = rank_descriptor_;
  metadata.reflection = rank_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// rank

// repeated int32 x_cor = 1;
int rank::x_cor_size() const {
  return x_cor_.size();
}
void rank::clear_x_cor() {
  x_cor_.Clear();
}
::google::protobuf::int32 rank::x_cor(int index) const {
  // @@protoc_insertion_point(field_get:buffer.rank.x_cor)
  return x_cor_.Get(index);
}
void rank::set_x_cor(int index, ::google::protobuf::int32 value) {
  x_cor_.Set(index, value);
  // @@protoc_insertion_point(field_set:buffer.rank.x_cor)
}
void rank::add_x_cor(::google::protobuf::int32 value) {
  x_cor_.Add(value);
  // @@protoc_insertion_point(field_add:buffer.rank.x_cor)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
rank::x_cor() const {
  // @@protoc_insertion_point(field_list:buffer.rank.x_cor)
  return x_cor_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
rank::mutable_x_cor() {
  // @@protoc_insertion_point(field_mutable_list:buffer.rank.x_cor)
  return &x_cor_;
}

// repeated int32 y_cor = 2;
int rank::y_cor_size() const {
  return y_cor_.size();
}
void rank::clear_y_cor() {
  y_cor_.Clear();
}
::google::protobuf::int32 rank::y_cor(int index) const {
  // @@protoc_insertion_point(field_get:buffer.rank.y_cor)
  return y_cor_.Get(index);
}
void rank::set_y_cor(int index, ::google::protobuf::int32 value) {
  y_cor_.Set(index, value);
  // @@protoc_insertion_point(field_set:buffer.rank.y_cor)
}
void rank::add_y_cor(::google::protobuf::int32 value) {
  y_cor_.Add(value);
  // @@protoc_insertion_point(field_add:buffer.rank.y_cor)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
rank::y_cor() const {
  // @@protoc_insertion_point(field_list:buffer.rank.y_cor)
  return y_cor_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
rank::mutable_y_cor() {
  // @@protoc_insertion_point(field_mutable_list:buffer.rank.y_cor)
  return &y_cor_;
}

// repeated float value = 3;
int rank::value_size() const {
  return value_.size();
}
void rank::clear_value() {
  value_.Clear();
}
float rank::value(int index) const {
  // @@protoc_insertion_point(field_get:buffer.rank.value)
  return value_.Get(index);
}
void rank::set_value(int index, float value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:buffer.rank.value)
}
void rank::add_value(float value) {
  value_.Add(value);
  // @@protoc_insertion_point(field_add:buffer.rank.value)
}
const ::google::protobuf::RepeatedField< float >&
rank::value() const {
  // @@protoc_insertion_point(field_list:buffer.rank.value)
  return value_;
}
::google::protobuf::RepeatedField< float >*
rank::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:buffer.rank.value)
  return &value_;
}

inline const rank* rank::internal_default_instance() {
  return &rank_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace buffer

// @@protoc_insertion_point(global_scope)
